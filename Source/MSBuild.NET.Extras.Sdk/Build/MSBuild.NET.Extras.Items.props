<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<PropertyGroup>
		<MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
	</PropertyGroup>

	<ItemDefinitionGroup>
		<_SdkImplicitReference>
			<IsImplicitlyDefined>true</IsImplicitlyDefined>
		</_SdkImplicitReference>
		<_SdkImplicitImport>
			<IsImplicitlyDefined>true</IsImplicitlyDefined>
		</_SdkImplicitImport>
	</ItemDefinitionGroup>

	<ItemDefinitionGroup>
		<Compile>
			<SubType>Code</SubType>
		</Compile>
		<EmbeddedResource>
			<SubType>Designer</SubType>
			<Generator>MSBuild:Compile</Generator>
		</EmbeddedResource>
		<Page>
			<SubType>Designer</SubType>
			<!-- XamlIntelliSenseFileGenerator, UpdateDesignTimeXaml -->
			<Generator>MSBuild:XamlIntelliSenseFileGenerator</Generator>
		</Page>
		<Resource>
			<SubType>Designer</SubType>
			<Generator>MSBuild:Compile</Generator>
		</Resource>
		<ApplicationDefinition>
			<SubType>Designer</SubType>
			<Generator>MSBuild:XamlIntelliSenseFileGenerator</Generator>
		</ApplicationDefinition>
	</ItemDefinitionGroup>

	<PropertyGroup>
		<!-- REGEX: '(?:\.([a-z]{2,3})(?:-([A-Z][a-z]{3}|[a-z]{3,5}))?(?:-([A-Z]{2}))?)%24' for LCIDs -->
		<LangIdRegEx>(?:\.([a-z]{2,3})(?:-([A-Z][a-z]{3}|[a-z]{3,5}))?(?:-([A-Z]{2}))?)%24</LangIdRegEx>
	</PropertyGroup>

	<!--
		HACK: WORST HACK IN THE HISTORY OF HACKS!
		TODO: Replace with a more elegant solution without involving RegEx if it's even pssible!
	-->
	<ItemGroup Condition="'$(EnableDefaultEmbeddedResourceItems)' == 'true' AND '$(EnableEmbeddedResourceCodeGenerator)' == 'true'">
		<EmbeddedResource Update="**\*.resx">
			<HasLangId>$([System.Text.RegularExpressions.Regex]::IsMatch('%(FileName)', '$(LangIdRegEx)'))</HasLangId>
		</EmbeddedResource>
		<EmbeddedResource Update="**\*.resx">
			<Generator Condition="!%(HasLangId)">$(EmbeddedResourceCodeGeneratorTool)</Generator>
			<LastGenOutput Condition="!%(HasLangId)">%(Filename)$(DefaultDesignerFileSuffix)$(DefaultLanguageSourceExtension)</LastGenOutput>
			<GenFilePath Condition="!%(HasLangId)">%(RecursiveDir)%(Filename)$(DefaultDesignerFileSuffix)$(DefaultLanguageSourceExtension)</GenFilePath>
			<DependentUpon Condition="%(HasLangId)">$([System.Text.RegularExpressions.Regex]::Replace('%(FileName)', '$(LangIdRegEx)', '%(Extension)'))</DependentUpon>
		</EmbeddedResource>
		<Compile Update="@(EmbeddedResource->'%(GenFilePath)')">
			<AutoGen>true</AutoGen>
			<DesignTime>true</DesignTime>
			<DesignTimeSharedInput>true</DesignTimeSharedInput>
			<DependentUpon>$([MSBuild]::ValueOrDefault('%(Filename)', '').Replace('$(DefaultDesignerFileSuffix)', '.resx'))</DependentUpon>
		</Compile>
	</ItemGroup>

	<ItemGroup Condition="'$(EnableDefaultResourceItems)' == 'true'">
		<None Remove="$(DefaultResourceIncludes)" Condition="'$(EnableDefaultPageItems)' != 'true'"/>
		<Resource Include="$(DefaultResourceIncludes)" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder);$(DefaultResourceExcludes)">
			<Generator>MSBuild:XamlIntelliSenseFileGenerator</Generator>
		</Resource>
		<UpToDateCheckInput Include="@(DefaultResourceIncludes)"/>
	</ItemGroup>

	<ItemGroup Condition="'$(EnableDefaultPageItems)' == 'true'">
		<None Remove="$(ApplicationDefinitionFile)"/>
		<ApplicationDefinition Include="$(ApplicationDefinitionFile)" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder)"/>
		<UpToDateCheckInput Include="@(ApplicationDefinition)"/>
	</ItemGroup>

	<ItemGroup Condition="'$(EnableDefaultPageItems)' == 'true'">
		<None Remove="**\*.xaml"/>
		<Page Include="**\*.xaml" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder);$(DefaultPageExcludes)"/>
		<UpToDateCheckInput Include="@(Page)"/>
		<Compile Update="**\*.xaml$(DefaultLanguageSourceExtension)">
			<DependentUpon>%(Filename)</DependentUpon>
		</Compile>
	</ItemGroup>

	<!-- Include the default platform packages  -->
	<!-- TODO: use metadata to detect if we've added it or it already exists -->

	<ItemGroup Condition="'$(DisableImplicitFrameworkReferences)' != 'true' AND '$(TargetFrameworkIdentifier)' == '.NETCore' AND '$(_TargetFrameworkVersionWithoutV)' >= '5.0'">
		<PackageReference Include="Microsoft.NETCore.UniversalWindowsPlatform" Version="$(_ImplicitPlatformPackageVersion)" IsImplicitlyDefined="true"/>
		<PackageReference Update="Microsoft.NETCore.UniversalWindowsPlatform" PrivateAssets="All" Publish="false"
			Condition="'$(OutputType)' != 'Exe' OR '$(OutputType)' != 'AppContainerExe'"/>
	</ItemGroup>

	<ItemGroup Condition="'$(DisableImplicitFrameworkReferences)' != 'true' AND '$(TargetFrameworkIdentifier)' == 'Tizen'">
		<PackageReference Include="Tizen.NET" Version="$(_ImplicitPlatformPackageVersion)" IsImplicitlyDefined="true"/>
		<PackageReference Update="Tizen.NET" PrivateAssets="All" Publish="false" Condition="'$(OutputType)' != 'Exe'"/>
	</ItemGroup>

</Project>