<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<PropertyGroup>
		<MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
	</PropertyGroup>

	<PropertyGroup>
		<_SdkBuildTargeting Condition="'$(IsMultiTargetingBuild)' != 'true'">MonoTargeting</_SdkBuildTargeting>
		<_SdkBuildTargeting Condition="'$(IsMultiTargetingBuild)' == 'true'">MultiTargeting</_SdkBuildTargeting>
	</PropertyGroup>

	<!--
		If LanguageTargets isn't otherwise set, then we'll just import the common targets.
		This should allow the restore target to run, which could bring in NuGet packages that sets the LanguageTargets.
		This means support for different languages could either be supplied via an SDK or a NuGet package.
	-->
	<PropertyGroup>
		<LanguageTargets Condition="'$(LanguageTargets)' == ''">$(MSBuildThisFileDirectory)..\Languages\MSBuild.NET.Languages.targets</LanguageTargets>
	</PropertyGroup>

	<!-- TODO: Needed for overriding Output paths in 'Microsoft.NET.Sdk'. Remove it once the migration is done -->
	<Import Project="$(MSBuildCoreSdkPath)Build\MSBuild.OutputPaths.targets" />

	<Import Project="$(MSBuildThisFileDirectory)..\BuildTargeting\MSBuild.NET.$(_SdkBuildTargeting).Before.targets" />

	<!-- Check if we already imported them as props. -->
	<Import Project="$(MSBuildThisFileDirectory)MSBuild.NET.Inference.Language.props" Condition="'$(ImportedMSBuildNETInferenceLanguageProps)' != 'true'" />
	<Import Project="$(LanguageTargets)" Condition="Exists('$(LanguageTargets)')" />

	<Import Project="$(MSBuildThisFileDirectory)..\BuildTargeting\MSBuild.NET.$(_SdkBuildTargeting).After.targets" />

</Project>